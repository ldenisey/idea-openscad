plugins {
    id 'org.jetbrains.intellij' version '1.8.0'
    id 'org.jetbrains.changelog' version '1.3.1'
    id 'com.github.ldenisey.setversions' version '1.0.1'
}

apply plugin: 'org.jetbrains.changelog'

group = 'com.javampire'
version = '2.3.0-SNAPSHOT'

sourceCompatibility = 1.11
targetCompatibility = 1.11
sourceSets.main.java.srcDirs = ['src/main/java', 'src/main/gen']

dependencies {
    testImplementation 'org.mockito:mockito-inline:4.6.1'
}

ext {
    pluginVerifierIdeVersions =
            "IIC-2021.2.1, " +
            "IIC-2022.2, " +
            "PCC-2021.2.1, " +
            "PCC-2022.2, " +
            "CL-2021.2.1, " +
            "CL-2022.2, " +
            "PS-2021.2.1, " +
            "PS-2022.2, " +
            "WS-2021.2.1," +
            "WS-2022.2"
}

repositories {
    mavenCentral()
}

intellij {
    //version.set("2021.2.1")
    version.set("222-EAP-SNAPSHOT")
    //version.set("LATEST-EAP-SNAPSHOT")

    plugins.set([
            'java'
            //,'psiviewer:221-SNAPSHOT'  // For debugging the parser only
    ])

    updateSinceUntilBuild.set(false)

    patchPluginXml {
        sinceBuild.set('212.5080')
        untilBuild.set('')

        changeNotes.set(provider { changelog.getLatest().toHTML() })
    }
}

// Read more: https://github.com/JetBrains/gradle-changelog-plugin
changelog {
    version.set(project.version)
    header.set(project.version)
    headerParserRegex.set(~/\d\.\d\.\d(-SNAPSHOT)?/)
    unreleasedTerm.set("Unreleased")
}

runPluginVerifier {
    ideVersions = (List) pluginVerifierIdeVersions.split(',')
}

publishPlugin {
    token = System.getenv("intellijPublishToken")
}

task downloadJSDeps() {
    description "Download latest version of the JS dependencies"

    // Get latest release build zip link
    File tempDir = getTemporaryDir()
    File releaseInfo = File.createTempFile('viewstl_relase_info', '.txt', tempDir)
    new URL('https://api.github.com/repos/omrips/viewstl/releases/latest').withInputStream { i ->
        releaseInfo.withOutputStream { it << i }
    }
    String latestReleaseUrl = (releaseInfo.text =~ /.*zipball_url[ :"]*([^"]*).*/)[0][1]

    // Download latest release
    File viewStlZip = new File('viewstl.zip', tempDir)
    new URL(latestReleaseUrl).withInputStream { i ->
        viewStlZip.withOutputStream { it << i }
    }

    // Extract build dir
    copy {
        from(zipTree(viewStlZip)) {
            include '**/build/**'
            eachFile { fcd ->
                fcd.relativePath = new RelativePath(true, fcd.relativePath.segments.drop(2))
            }
            includeEmptyDirs = false
        }
        into new File('src/main/resources/html/viewstl/')
    }
}
setupDependencies.finalizedBy downloadJSDeps