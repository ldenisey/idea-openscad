plugins {
    id 'org.jetbrains.intellij' version '1.16.1'
    id 'org.jetbrains.changelog' version '2.2.0'
    id 'com.github.ldenisey.setversions' version '1.0.4'
    id "com.github.node-gradle.node" version "7.0.1"
}

apply plugin: 'org.jetbrains.changelog'

group = 'com.javampire'
version = '2.4.1-SNAPSHOT'

sourceCompatibility = 1.11
targetCompatibility = 1.11
sourceSets.main.java.srcDirs = ['src/main/java', 'src/main/gen']
sourceSets.main.resources.srcDirs = ['src/main/resources', 'src/main/generated-resources']

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.json:json:20231013'
}

clean {
    delete "./node_modules"
    delete "./src/main/generated-resources"
}

intellij {
    //version.set("2021.2.1")
    //version.set("2022.3.1")
    version.set("2023.2.1")
    //version.set("LATEST-EAP-SNAPSHOT")

    updateSinceUntilBuild.set(false)

    patchPluginXml {
        sinceBuild.set('212.5080')
        untilBuild.set('')

        changeNotes.set(provider { changelog.getLatest().toHTML() })
    }

    // Type automatic setting, needed for command line configuration. Default type is 'IC'.
    if (project.findProperty("intellij.type")) {
        println("intellij.type set to : ${project.findProperty("intellij.type")}")
        type = project.findProperty("intellij.type")
    }
    //type = 'IU'// 'PY' // 'PC'

    // Plugins configuration
    switch (type.getOrNull()) {
        case ["IC", "UC", "", null]:
            plugins = ['java']
            break

        case "PY":
            plugins = ['Pythonid']
            break

        case "PC":
            plugins = ['PythonCore']
            break

        default:
            plugins = []
            break
    }

    // For parser debugging only
    //plugins.add('psiviewer:232.2')
}

runPluginVerifier {
    if (project.findProperty("runPluginVerifier.ideVersions")) {
        println("runPluginVerifier.ideVersions set to : ${project.findProperty("runPluginVerifier.ideVersions")}")
        ideVersions = new groovy.json.JsonSlurper().parseText(project.findProperty("runPluginVerifier.ideVersions"))
    }
}

// Read more: https://github.com/JetBrains/gradle-changelog-plugin
changelog {
    version.set(project.version)
    header.set(project.version)
    headerParserRegex.set(~/^(\d\.\d\.\d(-SNAPSHOT)?)$/)
    unreleasedTerm.set("Unreleased")
    groups.set(["Added", "Changed", "Removed", "Fixed"])
}

publishPlugin {
    token = System.getenv("intellijPublishToken")
}

npmInstall {
    inputs.file('package.json')
    inputs.file('src/main/javascript/index.js')
    inputs.file('src/main/javascript/package.json')
    inputs.file('src/main/javascript/dist/demo.html')
    outputs.dir("node_modules/")
}

tasks.register('webpack', NpxTask) {
    command = 'webpack'
    dependsOn 'npmInstall'
    onlyIf {
        !npmInstall.state.getSkipped()
    }
}
processResources.dependsOn('webpack')
